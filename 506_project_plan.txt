SI 506 - FINAL PROJECT PLAN



* What's your overall project plan, in 1-3 sentences?
-----

The program can generate a popularity score for poppular singers and bands.  Users input the name of the musician and the program searches the most popular songs of the musician from Spotify, and then goes to wikipedia to find each song's chart performance (For example, U2's Vertigo reached #1 in UK Singles and #10 in US Pop 100 (Billboard)). The program takes all the peak position and calculates the average as the popular score.  

* Why are you choosing to do this project?
-----



Users can use the program to compare the popularities of different musicians.  They can also use it to find out in which regions was the singer the most popular.

* What classes are you planning to define? For each:
- What will the class be called?
- What will one instance of the class represent? How would you describe it in English?
- What will the class constructor require as input?
- What are three instance variables the class might have?
- What are a couple methods the class might have? What will they do?
-----






Songs:
- One instance represents one song in Spotify
- A dictionary represents a song
- The name of the song and the name of the musician are required to generate one instance
- Instance variables: song_name, artist_name, album_name, year
- Methods: __str__ : to print out the info of songs, get_artist_URI: retrieve the unique URI for each artist

Searches:
- One instance represents one search result (page) in wikipedia
- A search will be in HTML form and will be parsed with BeautifulSoup into strings
- The name of the search is required
- Instance variables: search_title, search_url, search_content, search_summary
- Methods: __str__ : to print out the summary info of search, get_suggest: retrieve the other suggestion of possible outcome


* If you plan to define functions outside class definitions, what are they? What will they take as input? What will they return?
-----
get artist URI: take the name of the artist and generate the unique URI in Spotify
Score calculation function: take all the peak position and calculate the final score
highest score charts function: rank all the charts by peak positon and find the top 5





* What sequence of data might you be sorting? (A list of posts? Of photos? Of... ????) By what attribute will you sort that sequence? Why?
-----
A sequence of peak position data.  The lower the number, the more popular 
the song was.




* What APIs are you planning to use? Provide links to the documentation here.
What kind of authentication does each one require? OAuth? A key? Do you have to register an account? What parameters do you need to include in your parameters dictionary?
-----


Spotify API (library: spotipy)
- documentation: http://spotipy.readthedocs.io/en/latest/#
- Anthentication: not required (only use Non-authorized requests)

Wikipedia API (library: wikipedia)
- documentation: https://wikipedia.readthedocs.io/en/latest/code.html
- Anthentication: not required (free resource)




* What might you need to write tests for in this project?
-----




Song name, artist name, search results

* What major concerns do you have about this project plan, if any?
-----




Some of the songs have multiple versions, and that may change the song's title and affect search result in wikipedia.

* Write some code to get data from each API and save that data in a file (cache it). Submit that code file and the data file(s) you save. Here: What do we need to know to run the code you submit? What does it do? What data have you submitted? Please describe briefly.
-----




Library required:
json, pprint, requests, spotipy, wikipedia, urllib, bs4.BeautifulSoup
Artist_cache saves some data of artists in Spotify
Song_score_cache saves some peak positons of different songs from wikipedia